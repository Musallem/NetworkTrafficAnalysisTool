# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from covert_channel_detection_gui import CcdWindow
from live_capture import LiveCaptureWidget
from NetMapping import Networkmapping
from traffic_analyzer2 import TrafficAnalysis

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(585, 568)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/images/images/NTAT.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.MainWidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MainWidget.sizePolicy().hasHeightForWidth())
        self.MainWidget.setSizePolicy(sizePolicy)
        self.MainWidget.setObjectName("MainWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.MainWidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.welcome = QtWidgets.QLabel(self.MainWidget)
        self.welcome.setObjectName("welcome")
        self.verticalLayout.addWidget(self.welcome)
        self.NetworkTrafficAnalyzer = QtWidgets.QLabel(self.MainWidget)
        self.NetworkTrafficAnalyzer.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.NetworkTrafficAnalyzer.sizePolicy().hasHeightForWidth())
        self.NetworkTrafficAnalyzer.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.NetworkTrafficAnalyzer.setFont(font)
        self.NetworkTrafficAnalyzer.setScaledContents(True)
        self.NetworkTrafficAnalyzer.setObjectName("NetworkTrafficAnalyzer")
        self.verticalLayout.addWidget(self.NetworkTrafficAnalyzer)
        spacerItem = QtWidgets.QSpacerItem(20, 109, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Ignored)
        self.verticalLayout.addItem(spacerItem)
        self.offline_btn = QtWidgets.QPushButton(self.MainWidget)
        self.offline_btn.setObjectName("offline_btn")
        self.verticalLayout.addWidget(self.offline_btn)
        self.offline_btn.clicked.connect(self.OpenTrafficAnalyzer)
        self.live_btn = QtWidgets.QPushButton(self.MainWidget)
        self.live_btn.setObjectName("live_btn")
        self.verticalLayout.addWidget(self.live_btn)
        self.live_btn.clicked.connect(self.OpenLive)
        self.ccd_btn = QtWidgets.QPushButton(self.MainWidget)
        self.ccd_btn.setObjectName("ccd_btn")
        self.verticalLayout.addWidget(self.ccd_btn)
        self.ccd_btn.clicked.connect(self.OpenCCD)
        self.nmap_btn = QtWidgets.QPushButton(self.MainWidget)
        self.nmap_btn.setObjectName("nmap_btn")
        self.verticalLayout.addWidget(self.nmap_btn)
        self.nmap_btn.clicked.connect(self.OpenNetworkmaping)
        MainWindow.setCentralWidget(self.MainWidget)
        self.MenuBar = QtWidgets.QMenuBar(MainWindow)
        self.MenuBar.setGeometry(QtCore.QRect(0, 0, 585, 25))
        self.MenuBar.setObjectName("MenuBar")
        self.menuFile = QtWidgets.QMenu(self.MenuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.MenuBar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.MenuBar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(self.MenuBar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.MenuBar)
        self.ToolBar = QtWidgets.QToolBar(MainWindow)
        self.ToolBar.setMovable(True)
        self.ToolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.ToolBar.setObjectName("ToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.ToolBar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.Statusbar = QtWidgets.QStatusBar(MainWindow)
        self.Statusbar.setObjectName("Statusbar")
        MainWindow.setStatusBar(self.Statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionSelect = QtWidgets.QAction(MainWindow)
        self.actionSelect.setObjectName("actionSelect")
        self.actionSelectAll = QtWidgets.QAction(MainWindow)
        self.actionSelectAll.setObjectName("actionSelectAll")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionCut = QtWidgets.QAction(MainWindow)
        self.actionCut.setObjectName("actionCut")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionThemes = QtWidgets.QAction(MainWindow)
        self.actionThemes.setObjectName("actionThemes")
        self.actionZoomIn = QtWidgets.QAction(MainWindow)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomOut = QtWidgets.QAction(MainWindow)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionNfstream = QtWidgets.QAction(MainWindow)
        self.actionNfstream.setObjectName("actionNfstream")
        self.actionMachineLearning = QtWidgets.QAction(MainWindow)
        self.actionMachineLearning.setObjectName("actionMachineLearning")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionSelect)
        self.menuEdit.addAction(self.actionSelectAll)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menuView.addAction(self.actionThemes)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionZoomIn)
        self.menuView.addAction(self.actionZoomOut)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionNfstream)
        self.menuHelp.addAction(self.actionMachineLearning)
        self.MenuBar.addAction(self.menuFile.menuAction())
        self.MenuBar.addAction(self.menuEdit.menuAction())
        self.MenuBar.addAction(self.menuView.menuAction())
        self.MenuBar.addAction(self.menuHelp.menuAction())
        self.ToolBar.addSeparator()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.welcome.setText(_translate("MainWindow", "Welcome to the..."))
        self.NetworkTrafficAnalyzer.setText(_translate("MainWindow", "â€” Network Traffic Analyzer"))
        self.offline_btn.setText(_translate("MainWindow", "The Traffic Analyzer"))
        self.live_btn.setText(_translate("MainWindow", "Live Capture"))
        self.ccd_btn.setText(_translate("MainWindow", "Detect Covert Channels"))
        self.nmap_btn.setText(_translate("MainWindow", "Network Scan"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.ToolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSaveAs.setText(_translate("MainWindow", "Save as..."))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionSelect.setText(_translate("MainWindow", "Select"))
        self.actionSelectAll.setText(_translate("MainWindow", "Select All"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionThemes.setText(_translate("MainWindow", "Themes"))
        self.actionZoomIn.setText(_translate("MainWindow", "Zoom in"))
        self.actionZoomOut.setText(_translate("MainWindow", "Zoom Out"))
        self.actionNfstream.setText(_translate("MainWindow", "Nfstream"))
        self.actionMachineLearning.setText(_translate("MainWindow", "Machine Learning"))
        self.actionAbout.setText(_translate("MainWindow", "About"))

    def OpenLive(self):
        self.live_window = LiveCaptureWidget()
        self.live_window.show()

    def OpenTrafficAnalyzer(self):
        self.TrafficAnalyzer_window = TrafficAnalysis()
        self.TrafficAnalyzer_window.show()

    def OpenCCD(self):
        self.CovertChannelDetection_window = CcdWindow()
        self.CovertChannelDetection_window.show()

    def OpenNetworkmaping(self):
        self.NetworkMapping_window = Networkmapping()
        self.NetworkMapping_window.show()


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
